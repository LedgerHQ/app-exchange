---
name: Python client checks, package build and deployment

on:
  workflow_dispatch:
  push:
    tags:
      - 'client-*'
    branches:
      - develop
      - master
    paths:
      - client/**
      - .github/workflows/python-client.yml
  pull_request:
    paths:
      - client/**
      - .github/workflows/python-client.yml

jobs:
  build_and_check:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Python package
        run: |
          pip install --upgrade pip build twine
          cd client/
          python -m build;
          pip install .;

      - name: Check package version against CHANGELOG
        run: |
          CHANGELOG_VERSION=$(grep -Po '(?<=## \[)(\d+\.)+[^\]]' client/CHANGELOG.md | head -n 1)
          PIP_VERSION=$(pip show ledger_app_clients.exchange | grep Version | awk '{print $2}')
          if [ "${PIP_VERSION}" == "${CHANGELOG_VERSION}" ];
          then
              echo 'Package and CHANGELOG versions match!';
              exit 0;
          else
              echo "Package '${PIP_VERSION}' and CHANGELOG '${CHANGELOG_VERSION}' versions mismatch!";
              exit 1;
          fi
      - name: Check tag version against package version
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/client-')
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/client-}"
          PIP_VERSION=$(pip show ledger_app_clients.exchange | grep Version | awk '{print $2}')
          if [ "${PIP_VERSION}" == "${TAG_VERSION}" ];
          then
              echo 'Package and tag versions match!';
              exit 0;
          else
              echo "Package '${PIP_VERSION}' and tag '${TAG_VERSION}' versions mismatch!";
              exit 1;
          fi
          
  package_and_deploy:
      name: Build and deploy the Exchange Python package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/client-')
      needs: [build_and_check]
      uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_pypi_deployment.yml@v1
      with:
        package_name: ledger_app_clients.exchange
        publish: ${{ startsWith(github.ref, 'refs/tags/') }}
      secrets:
        pypi_token: ${{ secrets.PYPI_PUBLIC_API_TOKEN  }}