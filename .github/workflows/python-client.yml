---
name: Python client checks, package build and deployment

on:
  workflow_dispatch:
  push:
    tags:
      - 'client-*'
    branches:
      - develop
      - master
    paths:
      - client/**
      - .github/workflows/python-client.yml
  pull_request:
    paths:
      - client/**
      - .github/workflows/python-client.yml

jobs:
  package_and_deploy:
    name: Build and deploy Exchange Client Python package
    runs-on: ubuntu-latest
    steps:

      - name: Clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Python package
        run: |
          pip install --upgrade pip build twine
          cd client/
          python -m build;
          pip install .;

      - name: Check version against CHANGELOG
        run: |
          CHANGELOG_VERSION=$(grep -Po '(?<=## \[)(\d+\.)+[^\]]' client/CHANGELOG.md | head -n 1)
          PIP_VERSION=$(pip show ledger_app_clients.exchange | grep Version | awk '{print $2}')
          if [ "${PIP_VERSION}" == "${CHANGELOG_VERSION}" ];
          then
              echo 'Package and CHANGELOG versions match!';
              exit 0;
          else
              echo "Package '${PIP_VERSION}' and CHANGELOG '${CHANGELOG_VERSION}' versions mismatch!";
              exit 1;
          fi

      - name: Publish Python package on test.pypi.org
        if: success() && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/client-')
          # Check that the tag after "client-" matches CHANGELOG_VERSION
          # Extract tag version and compare with CHANGELOG_VERSION
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/client-}"
          CHANGELOG_VERSION=$(grep -Po '(?<=## \[)(\d+\.)+[^\]]' client/CHANGELOG.md | head -n 1)
          if [ "$TAG_VERSION" != "$CHANGELOG_VERSION" ]; then
            echo "Tag version '$TAG_VERSION' does not match CHANGELOG version '$CHANGELOG_VERSION'"
            exit 1
          fi
          (cd client && python -m twine upload --repository testpypi --verbose dist/*)
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PUBLIC_API_TOKEN  }}
          TWINE_NON_INTERACTIVE: 1
