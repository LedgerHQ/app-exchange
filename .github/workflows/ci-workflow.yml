name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
    - master
    - develop
  pull_request:
    branches:
    - master
    - develop

jobs:
  build_sideloaded_applications:
    strategy:
      matrix:
        include:
        - coin: stellar
          repo: app-stellar
        - coin: tezos
          repo: app-tezos
        - coin: xrp
          repo: app-xrp
        - coin: ethereum
          repo: app-ethereum
        - coin: litecoin
          repo: app-bitcoin-new
        - coin: bitcoin
          repo: app-bitcoin-new

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone ${{ matrix.repo }} for coin ${{ matrix.coin }}
        uses: actions/checkout@v3
        with:
          repository: LedgerHQ/${{ matrix.repo }}
          ref: develop

      - name: Build in ${{ matrix.repo }} coin ${{ matrix.coin }}
        run: |
          make clean ; COIN=${{ matrix.coin }} BOLOS_SDK=$NANOS_SDK make
          cp bin/app.elf ${{ matrix.coin }}_nanos.elf
          make clean ; COIN=${{ matrix.coin }} BOLOS_SDK=$NANOX_SDK make
          cp bin/app.elf ${{ matrix.coin }}_nanox.elf
          make clean ; COIN=${{ matrix.coin }} BOLOS_SDK=$NANOSP_SDK make
          cp bin/app.elf ${{ matrix.coin }}_nanosp.elf

      - name: Upload ${{ matrix.coin }} binaries
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.coin }}_binaries
          path: ./*.elf
          if-no-files-found: error

  job_build_exchange:
    name: Build Exchange
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build Exchange
        run: |
          make clean ; BOLOS_SDK=$NANOS_SDK TESTING=1 TEST_PUBLIC_KEY=1 make
          cp bin/app.elf exchange_nanos.elf
          make clean ; BOLOS_SDK=$NANOX_SDK TESTING=1 TEST_PUBLIC_KEY=1 make
          cp bin/app.elf exchange_nanox.elf
          make clean ; BOLOS_SDK=$NANOSP_SDK TESTING=1 TEST_PUBLIC_KEY=1 make
          cp bin/app.elf exchange_nanosp.elf

      - name: Upload Exchange binaries
        uses: actions/upload-artifact@v2
        with:
          name: exchange_binaries
          path: ./*.elf
          if-no-files-found: error

  jobs-e2e-tests:
    strategy:
      matrix:
        device: [Nano S, Nano X, Nano SP]
    needs:
      - job_build_exchange
      - build_sideloaded_applications
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Install APT dependencies
        run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install JS dependencies
        run: cd test && yarn install

      - name: Download all binaries
        uses: actions/download-artifact@v2

      - name: Gather artifacts
        run: |
          mkdir test/elfs
          mv *_binaries/*.elf test/elfs

      - name: Run zemu tests for device ${{ matrix.device }}
        run: cd test && yarn test -t "\[${{ matrix.device }}\]"

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - uses: actions/checkout@v2
      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build
